{"version":3,"sources":["components/Main.js","config/firebase.js","context/AuthContext.js","components/SignIn.js","context/CustomerContext.js","components/Reservation.js","context/DashboardContext.js","components/Dashboard.js","components/CurrentVisits.js","components/IncomingVisits.js","components/Queue.js","components/CustomerDashboard.js","components/PageNotFound/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Main","className","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","value","signIn","email","password","signInWithEmailAndPassword","logOut","signOut","Provider","SignIn","mailRef","useRef","passRef","history","useHistory","handleSubmit","e","a","preventDefault","current","push","console","log","message","ref","type","onClick","CustomerContext","useCustomer","CustomerProvider","userData","setUserData","loading","setLoading","incomingVisits","setIncomingVistis","queueData","setQueueData","fetchDisplay","on","snap","data","val","queueArray","i","reservation","specialist","name","reservationsRef","transaction","then","token","snapshot","node_","value_","key","getKey","date","Date","customer","status","reservationCode","timestamp","getTime","child","set","fetchUserData","id","exists","fetchIncomingVisits","orderByChild","equalTo","limitToFirst","visitsArray","cancelMeeting","reservationRef","update","remove","findSpecialist","find","el","currentPatient","specialistId","currentPatientRef","Reservation","specialistRef","nameRef","DashboardContext","useDashboard","DashboardProvider","specialistData","setSpecialistData","fetchCustomers","specialistInfo","role","customersArray","sort","b","customers","fetchSpecialist","userId","uid","callMeeting","displayRef","startMeeting","meetingStartTime","endMeeting","currentPatientToken","Dashboard","handleLogOut","map","CurrentVisits","visit","desk","IncomingVisits","Queue","position","setPosition","startTimer","setStartTimer","min","setMin","sec","setSec","fetchData","calculateWaitingTime","intervalId","setInterval","clearInterval","indexInQueue","forEach","index","begginTimestamp","startTime","endTime","setMinutes","getMinutes","now","distance","minutes","Math","floor","seconds","CustomerDashboard","props","customerView","queueView","setQueueView","match","params","handleUser","PageNotFound","App","routes","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9e6946f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nexport default function Main() {\r\n    return (\r\n        <div className='operation-buttons'>\r\n            <Link to='/reservation'>CUSTOMER</Link>\r\n            <Link to='/signin'>SPECIALIST</Link>\r\n        </div>\r\n    )\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDy1NHxSsz2auiR6JwdVRQAOb5m82mkNrA\",\r\n    authDomain: \"queue-management-a8696.firebaseapp.com\",\r\n    projectId: \"queue-management-a8696\",\r\n    storageBucket: \"queue-management-a8696.appspot.com\",\r\n    messagingSenderId: \"881909944130\",\r\n    appId: \"1:881909944130:web:7aea2aa9dd66def12442db\",\r\n    measurementId: \"G-M22GWEZV19\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;","import React, {useContext, useState, useEffect} from 'react'\r\nimport { auth } from '../config/firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n\r\n    const signIn = (email, password) => {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    const logOut = () => {\r\n        return auth.signOut();\r\n    }\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n        })\r\n        return unsub;\r\n    }, [])\r\n    \r\n    const value = {\r\n        currentUser,\r\n        signIn,\r\n        logOut,\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value = {value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, {useRef, useEffect} from 'react'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function SignIn() {\r\n\r\n    const mailRef = useRef(null);\r\n    const passRef = useRef(null);\r\n    const {signIn} = useAuth();\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let email = mailRef.current.value;\r\n        let password = passRef.current.value;\r\n        try {\r\n            await signIn(email, password);\r\n            history.push('/');\r\n        }catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n       return (\r\n       <div className='login-container'>\r\n            <form>\r\n                <label>Mail : </label><br />\r\n                <input ref={mailRef} type=\"text\"/><br />\r\n                <label>Password : </label><br/>\r\n                <input ref={passRef} type=\"text\" /><br /><br />\r\n                <input type=\"submit\" onClick={handleSubmit} value=\"Login\" />\r\n            </form>\r\n            <Link to='/'>Back</Link>\r\n        </div>\r\n        )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {database} from '../config/firebase'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CustomerContext = React.createContext();\r\n\r\nexport const useCustomer = () => {\r\n    return useContext(CustomerContext);\r\n}\r\n\r\nexport function CustomerProvider( {children} ) {\r\n    const [userData, setUserData] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [incomingVisits, setIncomingVistis] = useState();\r\n    const [queueData, setQueueData] = useState();\r\n    const history = useHistory();\r\n\r\n    const reservation = (specialist, name) => {\r\n        const reservationsRef = database.ref('reservations');\r\n        const counterRef = database.ref('/reservations/counter');\r\n        counterRef.transaction(value=>{\r\n            if (value === null) {\r\n              // the counter doesn't exist yet, start at one\r\n              return 1;\r\n            } else if (typeof value === 'number') {\r\n              // increment - the normal case\r\n              return value + 1;\r\n            }else{\r\n                console.log('Not a number');\r\n            }\r\n        })\r\n        .then((snap)=>{\r\n            let token = snap.snapshot.node_.value_;\r\n            const key = reservationsRef.push().getKey();\r\n            const date = new Date();\r\n            const customer = {\r\n                name,\r\n                specialist,\r\n                token,\r\n                status:\"incoming\",\r\n                reservationCode:key,\r\n                timestamp:date.getTime(),\r\n            }\r\n            reservationsRef.child(key).set(customer).then(() => {\r\n                history.push(`/display/${key}`);\r\n            })\r\n        })\r\n    }\r\n\r\n    const fetchUserData = (id) => {\r\n        const reservationRef = database.ref('/reservations')\r\n        reservationRef.on('value', snap => {\r\n            if (snap.child(id).exists()) {\r\n                let user = snap.child(id).val();\r\n                setUserData(user);\r\n                fetchDisplay();\r\n            }else{\r\n                console.log('dont exist');\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n    const fetchDisplay = () => {\r\n        const currentVisits = database.ref('/specialists');\r\n        currentVisits.on('value', snap => {\r\n            const data = snap.val();\r\n            const queueArray = [];\r\n            for(let i in data){\r\n                queueArray.push(data[i]);\r\n            }\r\n            setLoading(false)\r\n            setQueueData(queueArray);\r\n        })\r\n    }\r\n    const fetchIncomingVisits = () => {\r\n        const reservationsRef = database.ref('/reservations');\r\n        const query = reservationsRef\r\n            .orderByChild('status')\r\n            .equalTo('incoming')\r\n            .limitToFirst(5);\r\n\r\n        query.on('value',snap => {\r\n            const data = snap.val();\r\n            const visitsArray = [];\r\n            for(let i in data){\r\n                visitsArray.push(data[i])\r\n            }\r\n            setIncomingVistis(visitsArray);\r\n        })                     \r\n    }\r\n    const cancelMeeting = async (reservationCode, queueData, token ) => {\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        await reservationRef.update({status:\"canceled\"});\r\n        await reservationRef.remove();\r\n        const findSpecialist = queueData.find(el=>el.currentPatient.token === token);\r\n        if (findSpecialist) {\r\n            const specialistId = findSpecialist.id;\r\n            const currentPatientRef =  await database.ref('specialists/'+specialistId+'/currentPatient');\r\n            await currentPatientRef.update({status:'', token:'',name:''})\r\n        }\r\n    }\r\n    const value = {\r\n        reservation,\r\n        fetchUserData,\r\n        fetchDisplay,\r\n        fetchIncomingVisits,\r\n        cancelMeeting,\r\n        userData,\r\n        incomingVisits,\r\n        queueData,\r\n        loading,\r\n    }\r\n    return (\r\n        <CustomerContext.Provider value={value}>\r\n            {children}\r\n        </CustomerContext.Provider>\r\n    )\r\n}\r\n","import React, {useRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useCustomer} from '../context/CustomerContext'\r\n\r\nexport default function Reservation() {\r\n    const {reservation} = useCustomer();\r\n    const specialistRef = useRef();\r\n    const nameRef = useRef();\r\n    \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let specialist = specialistRef.current.value;\r\n        let name = nameRef.current.value;\r\n        await reservation(specialist, name);\r\n    }\r\n    return (\r\n        <div className='reservation-container'>\r\n            <form>\r\n                <label>Choose a specialist : </label><br />\r\n                <select ref={specialistRef} name=\"specialists\">\r\n                    <option value=\"cardiologist\">Cardiologist</option>\r\n                    <option value=\"psychiatrist\">Psychiatrist</option>\r\n                    <option value=\"allergist\">Allergist</option>\r\n                    <option value=\"orthodontist\">Orthodontist</option>\r\n                </select><br />\r\n                <label>Your Name</label><br/>\r\n                <input ref={nameRef} type=\"text\" /><br /><br />\r\n                <Link to='/'>Back</Link>\r\n                <input type=\"submit\" onClick={handleSubmit} value=\"Reserve\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext, useState} from 'react'\r\nimport {database} from '../config/firebase'\r\nimport {auth} from '../config/firebase'\r\n\r\nconst DashboardContext = React.createContext();\r\n\r\nexport const useDashboard = () => {\r\n    return useContext(DashboardContext);\r\n}\r\n\r\nexport function DashboardProvider( {children} ) {\r\n    const [specialistData, setSpecialistData] = useState();\r\n    const fetchSpecialist = () => {\r\n        const userId = auth.currentUser.uid;\r\n        const specialistRef =  database.ref('specialists/'+userId);\r\n\r\n        specialistRef.on('value', snap =>{\r\n            const specialistInfo = snap.val();\r\n            fetchCustomers(specialistInfo);\r\n        })\r\n    }\r\n    const fetchCustomers = (specialistInfo) => {\r\n        const role = specialistInfo.role;\r\n        const reservationsRef = database.ref(\"reservations\");\r\n        const query = reservationsRef\r\n            .orderByChild('specialist')\r\n            .equalTo(role);\r\n        query.on('value', snap => {\r\n            const data = snap.val();\r\n            const customersArray = [];\r\n            for(let i in data){\r\n                customersArray.push(data[i])\r\n            }\r\n            customersArray.sort((a, b)=>{\r\n                return a.timestamp - b.timestamp\r\n            })\r\n            setSpecialistData({specialistInfo, customers:customersArray})\r\n        })\r\n    }\r\n    const callMeeting = async (token, reservationCode, name) => {\r\n        const userId = auth.currentUser.uid;\r\n        const displayRef =  await database.ref('display/'+userId);\r\n        const specialistRef =  await database.ref('specialists/'+userId);\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        await displayRef.update({ token });\r\n        await reservationRef.update({status:'called'});\r\n        await specialistRef.update({currentPatient:{name:name, token:token, status:'called'}})\r\n    }\r\n    const startMeeting = async (reservationCode) => {\r\n        const userId = auth.currentUser.uid;\r\n        const date = new Date();\r\n        const reservationRef = await database.ref('reservations/'+reservationCode);\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:'started', meetingStartTime:date.getTime()});\r\n        await currentPatientRef.update({status:'started'})\r\n    }\r\n    const endMeeting = async (reservationCode) => {\r\n        const userId = auth.currentUser.uid;\r\n        const reservationRef = await database.ref('reservations/'+reservationCode);\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:\"ended\"});\r\n        await reservationRef.remove();\r\n        await currentPatientRef.update({status:'', token:'',name:''})\r\n    }\r\n    const cancelMeeting = async (reservationCode, token, currentPatientToken) => {\r\n        const userId = auth.currentUser.uid;\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:\"canceled\"});\r\n        await reservationRef.remove();\r\n        if (currentPatientToken === token) {\r\n            await currentPatientRef.update({status:'', token:'',name:''})\r\n        }\r\n    }\r\n    const value = {\r\n        specialistData,\r\n        fetchSpecialist,\r\n        fetchCustomers,\r\n        callMeeting,\r\n        startMeeting,\r\n        endMeeting,\r\n        cancelMeeting\r\n    }\r\n    return (\r\n        <DashboardContext.Provider value={value}>\r\n            {children}\r\n        </DashboardContext.Provider>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport { useDashboard} from '../context/DashboardContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Dashboard() {\r\n    const {logOut} = useAuth();\r\n    const {fetchSpecialist, specialistData,\r\n         callMeeting, startMeeting, endMeeting, cancelMeeting} = useDashboard();\r\n    // const [currentStatus, setCurrentStatus] = useState()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetchSpecialist();\r\n    }, [])\r\n    const handleLogOut = async () => {\r\n       try {\r\n           await logOut()\r\n            history.push('/');\r\n        }catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n    if (!specialistData) {\r\n        return <div>Loading...</div>\r\n    }\r\n    console.log(specialistData);\r\n    const {specialistInfo} = specialistData;\r\n    const {currentPatient} = specialistData.specialistInfo;\r\n    return (\r\n        <div className='dashboard-container'>\r\n            <h1>DashBoard</h1>\r\n            <h1>Specialist : {specialistInfo.role}</h1>\r\n            <p>Current patient: {currentPatient.name}</p>\r\n            <p>Patient token: {currentPatient.token}</p>\r\n            <p>Status: {currentPatient.status}</p>\r\n            <div className='customer-container'>\r\n                {specialistData.customers.map((customer, key)=>{\r\n                    return (\r\n                        <div key={key} className='customer'>\r\n                            <p>{customer.token}</p>\r\n                            <p>{customer.name}</p>\r\n                            <button \r\n                                className={(key === 0 && currentPatient.token==='')   ? 'allow' : 'restrict'} \r\n                                onClick={()=>callMeeting(customer.token, customer.reservationCode, customer.name)}>\r\n                                Call\r\n                            </button>\r\n                            <button \r\n                                className={(currentPatient.token === customer.token && currentPatient.status==='called') ? 'allow' : 'restrict'} \r\n                                onClick={()=>startMeeting(customer.reservationCode)}>\r\n                                Start meeting\r\n                            </button>\r\n                            <button \r\n                                className={(currentPatient.token === customer.token && currentPatient.status==='started') ? 'allow' : 'restrict'} \r\n                                onClick={()=>endMeeting(customer.reservationCode)}>\r\n                                End meeting\r\n                            </button>\r\n                            <button \r\n                                className='cancel'\r\n                                onClick={()=>cancelMeeting(customer.reservationCode, customer.token, currentPatient.token)}>\r\n                                Cancel meeting\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            <button onClick={handleLogOut}>Log Out</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CurrentVisits({queueData}) {\r\n    return (\r\n        <>\r\n                        {queueData.map((visit, key)=>{\r\n            return (\r\n                    <h1 key={key}>{visit.desk} ----{'>'} {visit.currentPatient.token}</h1>\r\n            ) \r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function IncomingVisits({incomingVisits}) {\r\n    console.log('yes');\r\n    return (\r\n        <>\r\n                {incomingVisits.map((visit, key)=> {\r\n                return (\r\n                    <h1 key={key}>{visit.token}</h1>\r\n                )\r\n            })}   \r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDashboard} from '../context/DashboardContext'\r\n\r\nexport default function Queue({userData}) {\r\n    const [position, setPosition] = useState()\r\n    const [startTimer, setStartTimer] = useState(false);\r\n    const {fetchCustomers, specialistData} = useDashboard();\r\n    const [min, setMin] = useState();\r\n    const [sec, setSec] = useState();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetchCustomers({role:userData.specialist})\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    useEffect(() => {\r\n        specialistData && calculateWaitingTime();\r\n    }, [specialistData])\r\n    useEffect(() => {\r\n        if (startTimer) {\r\n            if (sec < 0) {\r\n                setMin(min-1)\r\n                setSec(59);\r\n                return;\r\n            }\r\n            if (min === 0 && sec ===0) {\r\n                setSec(0)\r\n                setMin((position-1)*10)\r\n                setStartTimer(false);\r\n            }\r\n            // save intervalId to clear the interval when the\r\n            // component re-renders\r\n            const intervalId = setInterval(() => {\r\n                setSec(sec - 1);\r\n            }, 1000);\r\n            // clear interval on re-render to avoid memory leaks\r\n            return () => clearInterval(intervalId);\r\n            // add timeLeft as a dependency to re-rerun the effect\r\n            // when we update it\r\n\r\n        }\r\n      }, [sec, startTimer]);\r\n    if(!specialistData){\r\n        return (\r\n        <div className='queue-container'>\r\n            <h1>Loading...</h1>\r\n        </div>\r\n        )\r\n    }\r\n    // console.log(specialistData.customers);\r\n    const calculateWaitingTime = () => {\r\n        const {customers} = specialistData;\r\n        let indexInQueue;\r\n        customers.forEach((customer, index) => {\r\n            if (userData.reservationCode === customer.reservationCode) {\r\n                indexInQueue = index;\r\n            }\r\n        });\r\n        setPosition(indexInQueue);\r\n        //LETS SAY, THAT ONE SERVICE IS APPROXIMATELY 10min.\r\n        let serviceTime = 10;\r\n        //START OF THE MEETING\r\n        let begginTimestamp = customers[0].meetingStartTime;\r\n        if (begginTimestamp) {\r\n            let startTime = new Date (begginTimestamp);\r\n                    // END TIME IS MAX 10min\r\n            let endTime = new Date ( startTime );\r\n            endTime.setMinutes ( startTime.getMinutes() + 10 );\r\n            //NOW TIME\r\n            let now = new Date().getTime();\r\n            //SUBRTRACTING TO GET SECONDS AND MINUTES BETWEEN THIS TIME AND MAX END MEETING TIME\r\n            if (now>endTime.getTime()) {\r\n                console.log('Time already passed, current meeting is longer than 10 minutes');\r\n                setSec(0)\r\n                setMin(indexInQueue*serviceTime)\r\n                setStartTimer(false);\r\n            }else{\r\n                let distance = endTime.getTime() - now;\r\n                let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                console.log('minutes : '+minutes);\r\n                console.log('seconds : '+seconds);\r\n                setSec(seconds);\r\n                setMin(minutes);\r\n                setStartTimer(true);\r\n            }\r\n        }else{\r\n            setSec(0)\r\n            setMin(indexInQueue*serviceTime)\r\n            setStartTimer(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='queue-container'>\r\n            <h1>Your're {position+1}th in the queue</h1>\r\n            <h1>Queue waiting time</h1>\r\n            {!startTimer ? <p>{min} : {sec}</p> : (position === 0 ? <p>00:00</p> : <p>{min+(position-1)*10}:{sec}</p>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useCustomer} from '../context/CustomerContext'\r\nimport {useDashboard} from '../context/DashboardContext'\r\nimport CurrentVisits from '../components/CurrentVisits'\r\nimport IncomingVisits from '../components/IncomingVisits'\r\nimport Queue from './Queue'\r\n\r\nlet myInterval;\r\n\r\nexport default function CustomerDashboard(props) {\r\n    const [queueView, setQueueView] = useState(false);\r\n    const id = props.match.params.id;\r\n    const {fetchUserData, userData, queueData,\r\n         fetchIncomingVisits, loading, incomingVisits, cancelMeeting} = useCustomer();\r\n    useEffect(() => {\r\n        const handleUser = async () => {\r\n          await fetchUserData(id);\r\n          await fetchIncomingVisits();        }\r\n         handleUser();\r\n    }, [])\r\n    if (loading || !queueData || !incomingVisits) {\r\n        return <div className='customerDashboard-container'><h1>Loading...</h1></div>\r\n    }\r\n    if (!userData) {\r\n        return <div className='customerDashboard-container'><h1>Page is don't exist</h1></div>\r\n    }\r\n    if (userData.status === 'ended') {\r\n        return <div className='customerDashboard-container'><h1>A meeting has been ended, have a nice day!</h1></div>\r\n    }else if(userData.status === 'canceled'){\r\n        return <div className='customerDashboard-container'><h1>A meeting has been canceled</h1></div>\r\n    }\r\n    let customerView;\r\n    if (!queueView) {\r\n\r\n        customerView = (\r\n            <>\r\n                <p>Hello {userData.name}, Your token : {userData.token}</p>\r\n                {userData.status === 'called' && <p>Your turn is up, please proceede to the counter</p>}\r\n                {userData.status === 'started' && <p>A meeting have been started</p>}\r\n                <button onClick={()=>cancelMeeting(userData.reservationCode, userData, userData.token)}>Cancel visit</button>\r\n                <div className='display'>\r\n                    <div className='current-visits'>\r\n                        <CurrentVisits queueData={queueData} />\r\n                    </div>\r\n                    <div className='incoming-visits'>\r\n                        <IncomingVisits incomingVisits={incomingVisits} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }else{\r\n        customerView = <Queue userData={userData}/>\r\n    }\r\n    return (\r\n        <div className='customerDashboard-container'>\r\n            <h1>customerDashboard</h1>\r\n            <button onClick={()=>setQueueView(false)}>Display</button>\r\n            <button onClick={()=>setQueueView(true)}>Queue time</button>\r\n            {customerView}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <>\r\n            <h1>404! Page not found</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport Main from './components/Main'\nimport SignIn from './components/SignIn'\nimport Reservation from './components/Reservation'\nimport Dashboard from './components/Dashboard'\nimport CustomerDashboard from './components/CustomerDashboard'\nimport Queue from './components/Queue'\nimport PageNotFound from './components/PageNotFound/PageNotFound'\nimport '../src/css/style.css'\nimport {Route, Switch} from \"react-router-dom\";\nimport {useAuth} from './context/AuthContext';\nfunction App() {\n  const {currentUser} = useAuth();\n  let routes;\n  if(currentUser){\n    routes = (\n      <Switch>\n        <Route exact path='queue-management/' component={Dashboard} />\n        <Route path='queue-management/display/:id' component={CustomerDashboard} />\n        <Route path='queue-management/reservation' component={Reservation} />\n        <Route component={PageNotFound} />\n      </Switch>\n    )\n  }else if(currentUser === null){\n    routes = (\n      <Switch>\n        <Route exact path='queue-management/' component={Main} />\n        <Route path='queue-management/signin' component={SignIn} />\n        <Route path='queue-management/display/:id' component={CustomerDashboard} />\n        <Route path='queue-management/reservation' component={Reservation} />\n        <Route component={PageNotFound} />\n      </Switch>\n    )\n  }\n  return (\n      <div className=\"App\">\n        <div className='main-container'>\n          <h1>Queue Management System</h1>\n            {routes}\n        </div>\n      </div>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { AuthProvider } from './context/AuthContext';\nimport { DashboardProvider } from './context/DashboardContext'\nimport {CustomerProvider} from './context/CustomerContext'\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <DashboardProvider>\n        <CustomerProvider>\n          <App />\n        </CustomerProvider>\n      </DashboardProvider>\n    </AuthProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}