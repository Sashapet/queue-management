{"version":3,"sources":["components/Main.js","config/firebase.js","context/AuthContext.js","components/SignIn.js","context/CustomerContext.js","components/Reservation.js","context/DashboardContext.js","components/Dashboard.js","components/CurrentVisits.js","components/IncomingVisits.js","components/Queue.js","components/CustomerDashboard.js","components/CurrentCustomer.js","components/PageNotFound/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Main","className","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","value","signIn","email","password","signInWithEmailAndPassword","logOut","signOut","Provider","SignIn","mailRef","useRef","passRef","history","useHistory","handleSubmit","e","a","preventDefault","current","push","console","log","message","ref","type","onClick","CustomerContext","useCustomer","CustomerProvider","userData","setUserData","loading","setLoading","incomingVisits","setIncomingVistis","queueData","setQueueData","reservationCode","setReservationCode","fetchDisplay","on","snap","data","val","queueArray","i","reservation","specialist","name","reservationsRef","transaction","then","token","snapshot","node_","value_","key","getKey","date","Date","customer","status","timestamp","getTime","child","set","fetchUserData","id","exists","fetchIncomingVisits","orderByChild","equalTo","limitToFirst","visitsArray","cancelMeeting","reservationRef","update","remove","findSpecialist","find","el","currentPatient","specialistId","currentPatientRef","Reservation","reservationDone","setReservationDone","specialistRef","nameRef","DashboardContext","useDashboard","DashboardProvider","specialistData","setSpecialistData","fetchCustomers","specialistInfo","role","customersArray","sort","b","customers","fetchSpecialist","userId","uid","callMeeting","displayRef","startMeeting","meetingStartTime","endMeeting","currentPatientToken","Dashboard","handleLogOut","map","CurrentVisits","visit","desk","IncomingVisits","Queue","position","setPosition","startTimer","setStartTimer","min","setMin","sec","setSec","fetchData","calculateWaitingTime","intervalId","setInterval","clearInterval","indexInQueue","forEach","index","begginTimestamp","startTime","endTime","setMinutes","getMinutes","now","distance","minutes","Math","floor","seconds","CustomerDashboard","props","customerView","queueView","setQueueView","match","params","handleUser","CurrentCustomer","reservationCodeRef","PageNotFound","App","routes","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda37b3d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nexport default function Main() {\r\n    return (\r\n        <div className='operation-buttons'>\r\n            <Link to='/queue-management/reservation'>CUSTOMER</Link>\r\n            <Link to='/queue-management/current-customer'>CURRENT CUSTOMER</Link>\r\n            <Link to='/queue-management/signin'>SPECIALIST</Link>\r\n        </div>\r\n    )\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDy1NHxSsz2auiR6JwdVRQAOb5m82mkNrA\",\r\n    authDomain: \"queue-management-a8696.firebaseapp.com\",\r\n    projectId: \"queue-management-a8696\",\r\n    storageBucket: \"queue-management-a8696.appspot.com\",\r\n    messagingSenderId: \"881909944130\",\r\n    appId: \"1:881909944130:web:7aea2aa9dd66def12442db\",\r\n    measurementId: \"G-M22GWEZV19\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;","import React, {useContext, useState, useEffect} from 'react'\r\nimport { auth } from '../config/firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n\r\n    const signIn = (email, password) => {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    const logOut = () => {\r\n        return auth.signOut();\r\n    }\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n        })\r\n        return unsub;\r\n    }, [])\r\n    \r\n    const value = {\r\n        currentUser,\r\n        signIn,\r\n        logOut,\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value = {value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, {useRef, useEffect} from 'react'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function SignIn() {\r\n\r\n    const mailRef = useRef(null);\r\n    const passRef = useRef(null);\r\n    const {signIn} = useAuth();\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let email = mailRef.current.value;\r\n        let password = passRef.current.value;\r\n        try {\r\n            await signIn(email, password);\r\n            history.push('/queue-management/');\r\n        }catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n       return (\r\n       <div className='login-container'>\r\n            <form>\r\n                <label>Mail : </label><br />\r\n                <input ref={mailRef} type=\"text\"/><br />\r\n                <label>Password : </label><br/>\r\n                <input ref={passRef} type=\"text\" /><br /><br />\r\n                <input type=\"submit\" onClick={handleSubmit} value=\"Login\" />\r\n            </form>\r\n            <Link to='/queue-management/'>Back</Link>\r\n        </div>\r\n        )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {database} from '../config/firebase'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CustomerContext = React.createContext();\r\n\r\nexport const useCustomer = () => {\r\n    return useContext(CustomerContext);\r\n}\r\n\r\nexport function CustomerProvider( {children} ) {\r\n    const [userData, setUserData] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [incomingVisits, setIncomingVistis] = useState();\r\n    const [queueData, setQueueData] = useState();\r\n    const [reservationCode, setReservationCode] = useState();\r\n    const history = useHistory();\r\n\r\n    const reservation = (specialist, name) => {\r\n        const reservationsRef = database.ref('reservations');\r\n        const counterRef = database.ref('/reservations/counter');\r\n        counterRef.transaction(value=>{\r\n            if (value === null) {\r\n              // the counter doesn't exist yet, start at one\r\n              return 1;\r\n            } else if (typeof value === 'number') {\r\n              // increment - the normal case\r\n              return value + 1;\r\n            }else{\r\n                console.log('Not a number');\r\n            }\r\n        })\r\n        .then((snap)=>{\r\n            let token = snap.snapshot.node_.value_;\r\n            const key = reservationsRef.push().getKey();\r\n            const date = new Date();\r\n            const customer = {\r\n                name,\r\n                specialist,\r\n                token,\r\n                status:\"incoming\",\r\n                reservationCode:key,\r\n                timestamp:date.getTime(),\r\n            }\r\n            reservationsRef.child(key).set(customer).then(() => {\r\n                setReservationCode(key);\r\n                // history.push(`/queue-management/display/${key}`);\r\n            })\r\n        })\r\n    }\r\n\r\n    const fetchUserData = (id) => {\r\n        const reservationRef = database.ref('/reservations')\r\n        reservationRef.on('value', snap => {\r\n            if (snap.child(id).exists()) {\r\n                let user = snap.child(id).val();\r\n                setUserData(user);\r\n                fetchDisplay();\r\n            }else{\r\n                console.log('dont exist');\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n    const fetchDisplay = () => {\r\n        const currentVisits = database.ref('/specialists');\r\n        currentVisits.on('value', snap => {\r\n            const data = snap.val();\r\n            const queueArray = [];\r\n            for(let i in data){\r\n                queueArray.push(data[i]);\r\n            }\r\n            setLoading(false)\r\n            setQueueData(queueArray);\r\n        })\r\n    }\r\n    const fetchIncomingVisits = () => {\r\n        const reservationsRef = database.ref('/reservations');\r\n        const query = reservationsRef\r\n            .orderByChild('status')\r\n            .equalTo('incoming')\r\n            .limitToFirst(5);\r\n\r\n        query.on('value',snap => {\r\n            const data = snap.val();\r\n            const visitsArray = [];\r\n            for(let i in data){\r\n                visitsArray.push(data[i])\r\n            }\r\n            setIncomingVistis(visitsArray);\r\n        })                     \r\n    }\r\n    const cancelMeeting = async (reservationCode, queueData, token ) => {\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        await reservationRef.update({status:\"canceled\"});\r\n        await reservationRef.remove();\r\n        const findSpecialist = queueData.find(el=>el.currentPatient.token === token);\r\n        if (findSpecialist) {\r\n            const specialistId = findSpecialist.id;\r\n            const currentPatientRef =  await database.ref('specialists/'+specialistId+'/currentPatient');\r\n            await currentPatientRef.update({status:'', token:'',name:''})\r\n        }\r\n    }\r\n    const value = {\r\n        reservation,\r\n        fetchUserData,\r\n        fetchDisplay,\r\n        fetchIncomingVisits,\r\n        cancelMeeting,\r\n        reservationCode,\r\n        userData,\r\n        incomingVisits,\r\n        queueData,\r\n        loading,\r\n    }\r\n    return (\r\n        <CustomerContext.Provider value={value}>\r\n            {children}\r\n        </CustomerContext.Provider>\r\n    )\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useCustomer} from '../context/CustomerContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Reservation() {\r\n    const [reservationDone, setReservationDone] = useState(false)\r\n    const {reservation, reservationCode} = useCustomer();\r\n    const history = useHistory();\r\n    const specialistRef = useRef();\r\n    const nameRef = useRef();\r\n    \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let specialist = specialistRef.current.value;\r\n        let name = nameRef.current.value;\r\n        try{\r\n            await reservation(specialist, name);\r\n            setReservationDone(true);\r\n        }\r\n        catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n    const handleProceed = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/queue-management/display/${reservationCode}`);\r\n    }\r\n    if (reservationDone) {\r\n        if (reservationCode) {\r\n            return (\r\n                <div className='reservation-container'>\r\n                    <h1>PLEASE SAVE YOUR RESERVATION CODE : {reservationCode}</h1>\r\n                    <button onClick={handleProceed}>Proceed</button>\r\n                </div>\r\n            )\r\n        }else{\r\n        <div className='reservation-container'>\r\n            <h1>LOADING...</h1>\r\n        </div>\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='reservation-container'>\r\n            <form>\r\n                <label>Choose a specialist : </label><br />\r\n                <select ref={specialistRef} name=\"specialists\">\r\n                    <option value=\"cardiologist\">Cardiologist</option>\r\n                    <option value=\"psychiatrist\">Psychiatrist</option>\r\n                    <option value=\"allergist\">Allergist</option>\r\n                    <option value=\"orthodontist\">Orthodontist</option>\r\n                </select><br />\r\n                <label>Your Name</label><br/>\r\n                <input ref={nameRef} type=\"text\" /><br /><br />\r\n                <Link to='/queue-management/'>Back</Link>\r\n                <input type=\"submit\" onClick={handleSubmit} value=\"Reserve\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext, useState} from 'react'\r\nimport {database} from '../config/firebase'\r\nimport {auth} from '../config/firebase'\r\n\r\nconst DashboardContext = React.createContext();\r\n\r\nexport const useDashboard = () => {\r\n    return useContext(DashboardContext);\r\n}\r\n\r\nexport function DashboardProvider( {children} ) {\r\n    const [specialistData, setSpecialistData] = useState();\r\n    const fetchSpecialist = () => {\r\n        const userId = auth.currentUser.uid;\r\n        const specialistRef =  database.ref('specialists/'+userId);\r\n\r\n        specialistRef.on('value', snap =>{\r\n            const specialistInfo = snap.val();\r\n            fetchCustomers(specialistInfo);\r\n        })\r\n    }\r\n    const fetchCustomers = (specialistInfo) => {\r\n        const role = specialistInfo.role;\r\n        const reservationsRef = database.ref(\"reservations\");\r\n        const query = reservationsRef\r\n            .orderByChild('specialist')\r\n            .equalTo(role);\r\n        query.on('value', snap => {\r\n            const data = snap.val();\r\n            const customersArray = [];\r\n            for(let i in data){\r\n                customersArray.push(data[i])\r\n            }\r\n            customersArray.sort((a, b)=>{\r\n                return a.timestamp - b.timestamp\r\n            })\r\n            setSpecialistData({specialistInfo, customers:customersArray})\r\n        })\r\n    }\r\n    const callMeeting = async (token, reservationCode, name) => {\r\n        const userId = auth.currentUser.uid;\r\n        const displayRef =  await database.ref('display/'+userId);\r\n        const specialistRef =  await database.ref('specialists/'+userId);\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        await displayRef.update({ token });\r\n        await reservationRef.update({status:'called'});\r\n        await specialistRef.update({currentPatient:{name:name, token:token, status:'called'}})\r\n    }\r\n    const startMeeting = async (reservationCode) => {\r\n        const userId = auth.currentUser.uid;\r\n        const date = new Date();\r\n        const reservationRef = await database.ref('reservations/'+reservationCode);\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:'started', meetingStartTime:date.getTime()});\r\n        await currentPatientRef.update({status:'started'})\r\n    }\r\n    const endMeeting = async (reservationCode) => {\r\n        const userId = auth.currentUser.uid;\r\n        const reservationRef = await database.ref('reservations/'+reservationCode);\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:\"ended\"});\r\n        await reservationRef.remove();\r\n        await currentPatientRef.update({status:'', token:'',name:''})\r\n    }\r\n    const cancelMeeting = async (reservationCode, token, currentPatientToken) => {\r\n        const userId = auth.currentUser.uid;\r\n        const reservationRef = await database.ref('reservations/'+reservationCode)\r\n        const currentPatientRef =  await database.ref('specialists/'+userId+'/currentPatient');\r\n        await reservationRef.update({status:\"canceled\"});\r\n        await reservationRef.remove();\r\n        if (currentPatientToken === token) {\r\n            await currentPatientRef.update({status:'', token:'',name:''})\r\n        }\r\n    }\r\n    const value = {\r\n        specialistData,\r\n        fetchSpecialist,\r\n        fetchCustomers,\r\n        callMeeting,\r\n        startMeeting,\r\n        endMeeting,\r\n        cancelMeeting\r\n    }\r\n    return (\r\n        <DashboardContext.Provider value={value}>\r\n            {children}\r\n        </DashboardContext.Provider>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport { useDashboard} from '../context/DashboardContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Dashboard() {\r\n    const {logOut} = useAuth();\r\n    const {fetchSpecialist, specialistData,\r\n         callMeeting, startMeeting, endMeeting, cancelMeeting} = useDashboard();\r\n    // const [currentStatus, setCurrentStatus] = useState()\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetchSpecialist();\r\n    }, [])\r\n    const handleLogOut = async () => {\r\n       try {\r\n           await logOut()\r\n            history.push('/queue-management/');\r\n        }catch(e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n    if (!specialistData) {\r\n        return <div>Loading...</div>\r\n    }\r\n    console.log(specialistData);\r\n    const {specialistInfo} = specialistData;\r\n    const {currentPatient} = specialistData.specialistInfo;\r\n    return (\r\n        <div className='dashboard-container'>\r\n            <h1>DashBoard</h1>\r\n            <h1>Specialist : {specialistInfo.role}</h1>\r\n            <p>Current patient: {currentPatient.name}</p>\r\n            <p>Patient token: {currentPatient.token}</p>\r\n            <p>Status: {currentPatient.status}</p>\r\n            <div className='customer-container'>\r\n                {specialistData.customers.map((customer, key)=>{\r\n                    return (\r\n                        <div key={key} className='customer'>\r\n                            <p>{customer.token}</p>\r\n                            <p>{customer.name}</p>\r\n                            <button \r\n                                className={(key === 0 && currentPatient.token==='')   ? 'allow' : 'restrict'} \r\n                                onClick={()=>callMeeting(customer.token, customer.reservationCode, customer.name)}>\r\n                                Call\r\n                            </button>\r\n                            <button \r\n                                className={(currentPatient.token === customer.token && currentPatient.status==='called') ? 'allow' : 'restrict'} \r\n                                onClick={()=>startMeeting(customer.reservationCode)}>\r\n                                Start meeting\r\n                            </button>\r\n                            <button \r\n                                className={(currentPatient.token === customer.token && currentPatient.status==='started') ? 'allow' : 'restrict'} \r\n                                onClick={()=>endMeeting(customer.reservationCode)}>\r\n                                End meeting\r\n                            </button>\r\n                            <button \r\n                                className='cancel'\r\n                                onClick={()=>cancelMeeting(customer.reservationCode, customer.token, currentPatient.token)}>\r\n                                Cancel meeting\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            <button onClick={handleLogOut}>Log Out</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CurrentVisits({queueData}) {\r\n    return (\r\n        <>\r\n                        {queueData.map((visit, key)=>{\r\n            return (\r\n                    <h1 key={key}>{visit.desk} ----{'>'} {visit.currentPatient.token}</h1>\r\n            ) \r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function IncomingVisits({incomingVisits}) {\r\n    console.log('yes');\r\n    return (\r\n        <>\r\n                {incomingVisits.map((visit, key)=> {\r\n                return (\r\n                    <h1 key={key}>{visit.token}</h1>\r\n                )\r\n            })}   \r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDashboard} from '../context/DashboardContext'\r\n\r\nexport default function Queue({userData}) {\r\n    const [position, setPosition] = useState()\r\n    const [startTimer, setStartTimer] = useState(false);\r\n    const {fetchCustomers, specialistData} = useDashboard();\r\n    const [min, setMin] = useState();\r\n    const [sec, setSec] = useState();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetchCustomers({role:userData.specialist})\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    useEffect(() => {\r\n        specialistData && calculateWaitingTime();\r\n    }, [specialistData])\r\n    useEffect(() => {\r\n        if (startTimer) {\r\n            if (sec < 0) {\r\n                setMin(min-1)\r\n                setSec(59);\r\n                return;\r\n            }\r\n            if (min === 0 && sec ===0) {\r\n                setSec(0)\r\n                setMin((position-1)*10)\r\n                setStartTimer(false);\r\n            }\r\n            // save intervalId to clear the interval when the\r\n            // component re-renders\r\n            const intervalId = setInterval(() => {\r\n                setSec(sec - 1);\r\n            }, 1000);\r\n            // clear interval on re-render to avoid memory leaks\r\n            return () => clearInterval(intervalId);\r\n            // add timeLeft as a dependency to re-rerun the effect\r\n            // when we update it\r\n\r\n        }\r\n      }, [sec, startTimer]);\r\n    if(!specialistData){\r\n        return (\r\n        <div className='queue-container'>\r\n            <h1>Loading...</h1>\r\n        </div>\r\n        )\r\n    }\r\n    // console.log(specialistData.customers);\r\n    const calculateWaitingTime = () => {\r\n        const {customers} = specialistData;\r\n        let indexInQueue;\r\n        customers.forEach((customer, index) => {\r\n            if (userData.reservationCode === customer.reservationCode) {\r\n                indexInQueue = index;\r\n            }\r\n        });\r\n        setPosition(indexInQueue);\r\n        //LETS SAY, THAT ONE SERVICE IS APPROXIMATELY 10min.\r\n        let serviceTime = 10;\r\n        //START OF THE MEETING\r\n        let begginTimestamp = customers[0].meetingStartTime;\r\n        if (begginTimestamp) {\r\n            let startTime = new Date (begginTimestamp);\r\n                    // END TIME IS MAX 10min\r\n            let endTime = new Date ( startTime );\r\n            endTime.setMinutes ( startTime.getMinutes() + 10 );\r\n            //NOW TIME\r\n            let now = new Date().getTime();\r\n            //SUBRTRACTING TO GET SECONDS AND MINUTES BETWEEN THIS TIME AND MAX END MEETING TIME\r\n            if (now>endTime.getTime()) {\r\n                console.log('Time already passed, current meeting is longer than 10 minutes');\r\n                setSec(0)\r\n                setMin(indexInQueue*serviceTime)\r\n                setStartTimer(false);\r\n            }else{\r\n                let distance = endTime.getTime() - now;\r\n                let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                console.log('minutes : '+minutes);\r\n                console.log('seconds : '+seconds);\r\n                setSec(seconds);\r\n                setMin(minutes);\r\n                setStartTimer(true);\r\n            }\r\n        }else{\r\n            setSec(0)\r\n            setMin(indexInQueue*serviceTime)\r\n            setStartTimer(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='queue-container'>\r\n            <h1>Your're {position+1}th in the queue</h1>\r\n            <h1>Queue waiting time</h1>\r\n            {!startTimer ? <p>{min} : {sec}</p> : (position === 0 ? <p>00:00</p> : <p>{min+(position-1)*10}:{sec}</p>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useCustomer} from '../context/CustomerContext'\r\nimport {useDashboard} from '../context/DashboardContext'\r\nimport CurrentVisits from '../components/CurrentVisits'\r\nimport IncomingVisits from '../components/IncomingVisits'\r\nimport Queue from './Queue'\r\n\r\nlet myInterval;\r\n\r\nexport default function CustomerDashboard(props) {\r\n    const [queueView, setQueueView] = useState(false);\r\n    const id = props.match.params.id;\r\n    const {fetchUserData, userData, queueData,\r\n         fetchIncomingVisits, loading, incomingVisits, cancelMeeting} = useCustomer();\r\n    useEffect(() => {\r\n        const handleUser = async () => {\r\n          await fetchUserData(id);\r\n          await fetchIncomingVisits();        }\r\n         handleUser();\r\n    }, [])\r\n    if (loading || !queueData || !incomingVisits) {\r\n        return <div className='customerDashboard-container'><h1>Loading...</h1></div>\r\n    }\r\n    if (!userData) {\r\n        return <div className='customerDashboard-container'><h1>Page is don't exist</h1></div>\r\n    }\r\n    if (userData.status === 'ended') {\r\n        return <div className='customerDashboard-container'><h1>A meeting has been ended, have a nice day!</h1></div>\r\n    }else if(userData.status === 'canceled'){\r\n        return <div className='customerDashboard-container'><h1>A meeting has been canceled</h1></div>\r\n    }\r\n    let customerView;\r\n    if (!queueView) {\r\n\r\n        customerView = (\r\n            <>\r\n                <p>Hello {userData.name}, Your token : {userData.token}</p>\r\n                {userData.status === 'called' && <p>Your turn is up, please proceede to the counter</p>}\r\n                {userData.status === 'started' && <p>A meeting have been started</p>}\r\n                <button onClick={()=>cancelMeeting(userData.reservationCode, queueData, userData.token)}>Cancel visit</button>\r\n                <div className='display'>\r\n                    <div className='current-visits'>\r\n                        <CurrentVisits queueData={queueData} />\r\n                    </div>\r\n                    <div className='incoming-visits'>\r\n                        <IncomingVisits incomingVisits={incomingVisits} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }else{\r\n        customerView = <Queue userData={userData}/>\r\n    }\r\n    return (\r\n        <div className='customerDashboard-container'>\r\n            <h1>customerDashboard</h1>\r\n            <button onClick={()=>setQueueView(false)}>Display</button>\r\n            <button onClick={()=>setQueueView(true)}>Queue time</button>\r\n            {customerView}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function CurrentCustomer() {\r\n\r\n    const reservationCodeRef = useRef(null);\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let reservationCode = reservationCodeRef.current.value;\r\n            history.push(`/queue-management/display/${reservationCode}`);\r\n    }\r\n       return (\r\n       <div className='login-container'>\r\n            <form>\r\n                <label>Reservation Code : </label><br />\r\n                <input ref={reservationCodeRef} type=\"text\"/><br />\r\n                <input type=\"submit\" onClick={handleSubmit} value=\"Proceed\" />\r\n            </form>\r\n            <Link to='/queue-management/'>Back</Link>\r\n        </div>\r\n        )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <>\r\n            <h1>404! Page not found</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport Main from './components/Main'\nimport SignIn from './components/SignIn'\nimport Reservation from './components/Reservation'\nimport Dashboard from './components/Dashboard'\nimport CustomerDashboard from './components/CustomerDashboard'\nimport CurrentCustomer from './components/CurrentCustomer'\nimport PageNotFound from './components/PageNotFound/PageNotFound'\nimport '../src/css/style.css'\nimport {Route, Switch} from \"react-router-dom\";\nimport {useAuth} from './context/AuthContext';\nfunction App() {\n  const {currentUser} = useAuth();\n  let routes;\n  if(currentUser){\n    routes = (\n      <Switch>\n        <Route exact path='/queue-management' component={Dashboard} />\n        <Route path='/queue-management/display/:id' component={CustomerDashboard} />\n        <Route path='/queue-management/reservation' component={Reservation} />\n        <Route component={PageNotFound} />\n      </Switch>\n    )\n  }else if(currentUser === null){\n    routes = (\n      <Switch>\n        <Route exact path='/queue-management' component={Main} />\n        <Route path='/queue-management/signin' component={SignIn} />\n        <Route path='/queue-management/display/:id' component={CustomerDashboard} />\n        <Route path='/queue-management/reservation' component={Reservation} />\n        <Route path='/queue-management/current-customer' component={CurrentCustomer} />\n        <Route component={PageNotFound} />\n      </Switch>\n    )\n  }\n  return (\n      <div className=\"App\">\n        <div className='main-container'>\n          <h1>Queue Management System</h1>\n            {routes}\n        </div>\n      </div>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from \"react-router-dom\";\nimport { AuthProvider } from './context/AuthContext';\nimport { DashboardProvider } from './context/DashboardContext'\nimport {CustomerProvider} from './context/CustomerContext'\n\nReactDOM.render(\n  <HashRouter>\n    <AuthProvider>\n      <DashboardProvider>\n        <CustomerProvider>\n          <App />\n        </CustomerProvider>\n      </DashboardProvider>\n    </AuthProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}